class Indirect
 include Operators
 def inc_pc
  1
 end
 def preop
  print <<-ENDLOAD
  uint8_t addr=load_mem8(PC);
  uint8_t addrb=load_mem8(addr)+(load_mem8(addr+1)<<8)
  ENDLOAD
 end
 def load
  print <<-ENDLOAD
  uint8_t var=load_mem8(addrb);
  ENDLOAD
 end
 def load_other
  print <<-ENDLOAD
  uint8_t var2=load_mem8(addrb);
  ENDLOAD
 end
 def store
  print <<-ENDSTORE
  store_mem8((addrb) & 0xFF,var);
  ENDSTORE
 end
end

class ZeroPageO_Indirect
 include Operators
 def inc_pc
  return 1
 end
 def preop
  print <<-ENDLOAD
  uint8_t addr=load_mem8(PC);
  ENDLOAD
 end
 def load
  print <<-ENDLOAD
  uint8_t var=load_mem8((addr+%s) & 0xFF);
  ENDLOAD
 end
 def load_other
  print <<-ENDLOAD
  uint8_t var2=load_mem8((addr+%s) & 0xFF);
  ENDLOAD
 end
 def store
  print <<-ENDSTORE
  store_mem8((addr+%s) & 0xFF,var);
  ENDSTORE
 end
end

class ZeroPage_IndirectO
 include Operators
 def inc_pc
  return 1
 end
 def preop
  print <<-ENDLOAD
  uint8_t addr=load_mem8(PC);
  ENDLOAD
 end
 def load
  print <<-ENDLOAD
  uint8_t var=load_mem8((addr+%s) & 0xFF);
  ENDLOAD
 end
 def load_other
  print <<-ENDLOAD
  uint8_t var2=load_mem8((addr+%s) & 0xFF);
  ENDLOAD
 end
 def store
  print <<-ENDSTORE
  store_mem8((addr+%s) & 0xFF,var);
  ENDSTORE
 end
end
